The ``2-matrix_divided`` module
============================

# Using ``matrix_divided``
----------------
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided


This function can handle integers and floats:
----------------
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided([["Hello", "world", "!"], [4, 5, 6]], 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    
and lists of different sizes:
----------------
    >>> matrix_divided([[1, 2, 3], [4, 5, 6, 7]], 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1, 2, 3, 20], [4, 5, 6]], 3)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size


and verifies that div is an integer/float and NOT 0:
----------------
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], "Holberton")
    Traceback (most recent call last):
        ...
    TypeError: div must be a number


and None values:
----------------
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

    >>> matrix_divided(None, 3)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
